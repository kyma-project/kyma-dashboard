kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1
metadata:
  name: certificates.cert.gardener.cloud
  labels:
    resources.gardener.cloud/managed-by: gardener
spec:
  group: cert.gardener.cloud
  names:
    plural: certificates
    singular: certificate
    shortNames:
      - cert
    kind: Certificate
    listKind: CertificateList
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Certificate is the certificate CR.
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CertificateSpec is the spec of the certificate to request.
              type: object
              properties:
                commonName:
                  description: CommonName is the CN for the certificate (max. 64 chars).
                  type: string
                  maxLength: 64
                csr:
                  description: >-
                    CSR is the alternative way to provide CN,DNSNames and other
                    information.
                  type: string
                  format: byte
                dnsNames:
                  description: >-
                    DNSNames are the optional additional domain names of the
                    certificate.
                  type: array
                  items:
                    type: string
                ensureRenewedAfter:
                  description: >-
                    EnsureRenewedAfter specifies a time stamp in the past.
                    Renewing is only triggered if certificate notBefore date is
                    before this date.
                  type: string
                  format: date-time
                followCNAME:
                  description: >-
                    FollowCNAME if true delegated domain for DNS01 challenge is
                    used if CNAME record for DNS01 challange domain
                    `_acme-challenge.<domain>` is set.
                  type: boolean
                issuerRef:
                  description: IssuerRef is the reference of the issuer to use.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: >-
                        Name is the name of the issuer (in the configured issuer
                        namespace on default cluster or namespace on target
                        cluster as given).
                      type: string
                    namespace:
                      description: >-
                        Namespace is the namespace of the issuer, only needed if
                        issuer is defined on target cluster
                      type: string
                keystores:
                  description: >-
                    Keystores configures additional keystore output formats
                    stored in the `secretName`/`secretRef` Secret resource.
                  type: object
                  properties:
                    jks:
                      description: >-
                        JKS configures options for storing a JKS keystore in the
                        `spec.secretName`/`spec.secretRef` Secret resource.
                      type: object
                      required:
                        - create
                        - passwordSecretRef
                      properties:
                        create:
                          description: >-
                            Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks`
                            will be created in the target Secret resource,
                            encrypted using the password stored in
                            `passwordSecretRef`. The keystore file will only be
                            updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: >-
                            PasswordSecretRef is a reference to a key in a
                            Secret resource containing the password used to
                            encrypt the JKS keystore.
                          type: object
                          required:
                            - secretName
                          properties:
                            key:
                              description: >-
                                Key of the entry in the Secret resource's `data`
                                field to be used.
                              type: string
                            secretName:
                              description: >-
                                SecretName of the secret resource being referred
                                to in the same namespace.
                              type: string
                    pkcs12:
                      description: >-
                        PKCS12 configures options for storing a PKCS12 keystore
                        in the `spec.secretName`/`spec.secretRef` Secret
                        resource.
                      type: object
                      required:
                        - create
                        - passwordSecretRef
                      properties:
                        create:
                          description: >-
                            Create enables PKCS12 keystore creation for the
                            Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource,
                            encrypted using the password stored in
                            `passwordSecretRef`. The keystore file will only be
                            updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: >-
                            PasswordSecretRef is a reference to a key in a
                            Secret resource containing the password used to
                            encrypt the PKCS12 keystore.
                          type: object
                          required:
                            - secretName
                          properties:
                            key:
                              description: >-
                                Key of the entry in the Secret resource's `data`
                                field to be used.
                              type: string
                            secretName:
                              description: >-
                                SecretName of the secret resource being referred
                                to in the same namespace.
                              type: string
                renew:
                  description: Renew triggers a renewal if set to true
                  type: boolean
                secretLabels:
                  description: SecretLabels are labels to add to the certificate secret.
                  type: object
                  additionalProperties:
                    type: string
                secretName:
                  description: >-
                    SecretName is the name of the secret object to use for
                    storing the certificate.
                  type: string
                secretRef:
                  description: >-
                    SecretRef is the reference of the secret object to use for
                    storing the certificate.
                  type: object
                  properties:
                    name:
                      description: >-
                        name is unique within a namespace to reference a secret
                        resource.
                      type: string
                    namespace:
                      description: >-
                        namespace defines the space within which the secret name
                        must be unique.
                      type: string
                  x-kubernetes-map-type: atomic
            status:
              description: CertificateStatus is the status of the certificate request.
              type: object
              required:
                - state
              properties:
                backoff:
                  description: >-
                    BackOff contains the state to back off failed certificate
                    requests
                  type: object
                  required:
                    - recheckAfter
                    - recheckInterval
                  properties:
                    observedGeneration:
                      description: >-
                        ObservedGeneration is the observed generation the
                        BackOffState is assigned to
                      type: integer
                      format: int64
                    recheckAfter:
                      description: >-
                        RetryAfter is the timestamp this cert request is not
                        retried before.
                      type: string
                      format: date-time
                    recheckInterval:
                      description: RetryInterval is interval to wait for retrying.
                      type: string
                commonName:
                  description: CommonName is the current CN.
                  type: string
                conditions:
                  description: >-
                    List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready`.
                  type: array
                  items:
                    description: >-
                      Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path
                      .status.conditions.  For example, 
                       type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
                       // other fields }
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: >-
                          lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should
                          be when the underlying condition changed.  If that is
                          not known, then using the time when the API field
                          changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: >-
                          message is a human readable message indicating details
                          about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: >-
                          observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance,
                          if .metadata.generation is currently 12, but the
                          .status.conditions[x].observedGeneration is 9, the
                          condition is out of date with respect to the current
                          state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: >-
                          reason contains a programmatic identifier indicating
                          the reason for the condition's last transition.
                          Producers of specific condition types may define
                          expected values and meanings for this field, and
                          whether the values are considered a guaranteed API.
                          The value should be a CamelCase string. This field may
                          not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                      type:
                        description: >-
                          type of condition in CamelCase or in
                          foo.example.com/CamelCase. --- Many .condition.type
                          values are consistent across resources like Available,
                          but because arbitrary conditions can be useful (see
                          .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is
                          (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: >-
                          ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                dnsNames:
                  description: DNSNames are the current domain names.
                  type: array
                  items:
                    type: string
                expirationDate:
                  description: ExpirationDate shows the notAfter validity date.
                  type: string
                issuerRef:
                  description: IssuerRef is the used issuer.
                  type: object
                  required:
                    - name
                    - namespace
                  properties:
                    cluster:
                      description: >-
                        Cluster is the cluster name of the issuer ('default' or
                        'target'). optional because of backwards compatibility
                      type: string
                    name:
                      description: Name is the name of the issuer.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the issuer.
                      type: string
                lastPendingTimestamp:
                  description: >-
                    LastPendingTimestamp contains the start timestamp of the
                    last pending status.
                  type: string
                  format: date-time
                message:
                  description: Message is the status or error message.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the observed generation of the spec.
                  type: integer
                  format: int64
                state:
                  description: State is the certificate state.
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: COMMON NAME
          type: string
          description: Subject domain name of certificate
          jsonPath: .status.commonName
        - name: ISSUER
          type: string
          description: Issuer name
          jsonPath: .status.issuerRef.name
        - name: STATUS
          type: string
          description: Status of registration
          jsonPath: .status.state
        - name: EXPIRATION_DATE
          type: string
          description: Expiration date (not valid anymore after this date)
          priority: 500
          jsonPath: .status.expirationDate
        - name: DNS_NAMES
          type: string
          description: Domains names in subject alternative names
          priority: 2000
          jsonPath: .status.dnsNames
        - name: AGE
          type: date
          description: object creation timestamp
          jsonPath: .metadata.creationTimestamp
  conversion:
    strategy: None
status:
  conditions:
    - type: NamesAccepted
      status: 'True'
      lastTransitionTime: '2023-05-31T07:56:27Z'
      reason: NoConflicts
      message: no conflicts found
    - type: Established
      status: 'True'
      lastTransitionTime: '2023-05-31T07:56:27Z'
      reason: InitialNamesAccepted
      message: the initial names have been accepted
  acceptedNames:
    plural: certificates
    singular: certificate
    shortNames:
      - cert
    kind: Certificate
    listKind: CertificateList
  storedVersions:
    - v1alpha1
