apiVersion: v1
kind: ConfigMap
metadata:
  name: kymas.operator.kyma-project.io
  namespace: kube-public
  labels:
    app.kubernetes.io/name: kymas.operator.kyma-project.io
    busola.io/extension: resource
    busola.io/extension-version: '0.5'
data:
  dataSources: |
    moduleTemplates:
      resource:
        kind: ModuleTemplate
        namespace: null
        group: operator.kyma-project.io
        version: v1beta1
  details: |
    header: []
    body:
      - name: Summary
        widget: Panel
        children:
          - name: channel
            source: spec.channel
          - name: State
            widget: Badge
            source: status.state
            description: 'status.state!="Ready" ? status.lastOperation.operation : ""'
          - name: Age
            source: metadata.creationTimestamp
      - widget: Alert
        severity: warning
        source: '"alert.beta"'
        visibility: '(
          $fullModuleTemplate := $filter($moduleTemplates().items, function($v) {
            $v.metadata.labels."operator.kyma-project.io/module-name" in $item.spec.modules.name
          });
          $isBeta := $fullModuleTemplate.metadata.labels."operator.kyma-project.io/beta" = "true";
          $isBeta;
        )'
      - widget: Table
        source: 'spec.modules[]'
        name: Modules
        visibility: $exists(*)
        children:
          - source: $item.name
            name: Module Name
          - source: $item.channel
            name: Channel
          - name: Version
            source: '$parent.status.modules ? $filter($parent.status.modules, function($p){$p.name=name and $p.channel=channel}).version : "-"'
            widget: Text
          - name: State
            widget: Badge
            source: '$filter($parent.status.modules, function($p){$p.name=name and $p.channel=channel}).state'
  form: |
    - simple: true
      path: spec.channel
      required: true
      enum:
        - regular
        - fast
    - widget: GenericList
      path: spec.modules
      children:
        - path: "[].name"
          required: true
          enum: '$distinct($moduleTemplates().items.metadata.labels."operator.kyma-project.io/module-name")'
        - path: "[].channel"
          required: true
          visibility: "$boolean($item.name)"
          enum: |
            $filter($moduleTemplates().items, function($v) {
              $v.metadata.labels."operator.kyma-project.io/module-name" = $item.name
            }).spec.channel
    - widget: Alert
      severity: warning
      alert: '"alert.beta"'
      visibility: '(
        $fullModuleTemplate := $filter($moduleTemplates().items, function($v) {
          $v.metadata.labels."operator.kyma-project.io/module-name" in $item.spec.modules.name
        });
        $isBeta := $fullModuleTemplate.metadata.labels."operator.kyma-project.io/beta" = "true";
        $isBeta;
      )'
  general: |-
    resource:
      kind: Kyma
      group: operator.kyma-project.io
      version: v1beta1
    name: Kyma
    category: Kyma
    urlPath: kymas
    scope: namespace
  list: |-
    - name: channel
      widget: Labels
      source: spec.channel
    - name: State
      widget: Badge
      source: status.state
      tooltip: status.state
    - name: Age
      source: metadata.creationTimestamp
  translations: |
    en:
      metadata.annotations: Annotations
      metadata.labels: Labels
      metadata.creationTimestamp: Created at
      alert.beta: "CAUTION: The Service Level Agreements (SLAs) and Support obligations do not apply to Beta modules and functionalities. If Beta modules or functionalities directly or indirectly affect other modules, the Service Level Agreements and Support for these modules are limited to priority levels P3 (Medium) or P4 (Low). Thus, Beta releases are not intended for use in customer production environments."
  injections: |-
    - name: Kyma Modules
      widget: Panel
      source: $
      visibility: $not($exists($item.spec.modules.channel))
      targets:
        - slot: details-top
          location: ClusterOverview
      order: 1 
      children: 
        - widget: MessagePanel
          source: $
          name: Kyma Modules Panel
          title: Seems that you don't have any Kyma Modules configured
          subtitle: Add at least one Kyma Module. Add your module under "kyma-system -> Kyma"
          children:
            - widget: Wizard
              name: Add Module
              wizard: module-wizard
              visibility: $not($exists($item.spec.modules.channel))
    - name: Kyma
      widget: Panel
      source: $
      visibility: $exists($item.spec.modules.channel)
      targets:
        - slot: details-top
          location: ClusterOverview
      order: 2 
      children: 
        - name: Name
          source: metadata.name
          widget: ResourceLink
          resource:
            name: metadata.name
            namespace: metadata.namespace
            kind: '"Kyma"'
        - name: State
          widget: Badge
          source: status.state
          description: 'status.state!="Ready" ? status.lastOperation.operation : ""'
        - widget: Alert
          severity: warning
          source: '"alert.beta"'
          visibility: '(
            $fullModuleTemplate := $filter($moduleTemplates().items, function($v) {
              $v.metadata.labels."operator.kyma-project.io/module-name" in $item.spec.modules.name
            });
            $isBeta := $fullModuleTemplate.metadata.labels."operator.kyma-project.io/beta" = "true";
            $isBeta;
          )'
        - name: Installed Modules
          source: $item.spec.modules
          widget: Table
          disablePadding: true
          extraHeaderContent: 
            - name: ''
              source: '"Modify"'
              widget: ResourceButton
              resource:
                name: $parent.metadata.name
                namespace: $parent.metadata.namespace
                kind: '"Kyma"'
          children: 
            - name: Name
              source: name
            - name: Namespace
              source: $parent.metadata.namespace
            - name: Channel
              source: channel
              widget: Text
            - name: Version
              source: '$parent.status.modules ? $filter($parent.status.modules, function($p){$p.name=name and $p.channel=channel}).version : "-"'
              widget: Text
            - name: State
              widget: Badge
              source: '$filter($parent.status.modules, function($p){$p.name=name and $p.channel=channel}).state'
