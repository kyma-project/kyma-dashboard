name: kyma-dashboard-dev

on:
  pull_request_target:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    # paths:
    #   - "Dockerfile.*"
    #   - "package.json"
    #   - "environments/dev/**"
    #   - "extensions/**"
    #   - "gulpfile.js"
    #   - "Makefile"
    #   - "tests/**"


permissions:
  id-token: write # This is required for requesting the JWT token
  contents: read # This is required for actions/checkout

jobs:
  load-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load environment variables
        id: env
        run: |
          chmod +x ./environments/dev/env.sh
          ./environments/dev/env.sh
          echo "WEB_IMAGE=$WEB_IMAGE" >> $GITHUB_OUTPUT
          echo "BACKEND_IMAGE=$BACKEND_IMAGE" >> $GITHUB_OUTPUT
          echo "LOCAL_IMAGE=$LOCAL_IMAGE" >> $GITHUB_OUTPUT
    build-extensions:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Setup Nodejs
          uses: actions/setup-node@v2
          with:
            node-version: '20'
        - name: Build extensions
          run: |
            echo "Building extensions"
            ENV=${DEV} npm run prepare-extensions
            ENV=${DEV} npm run pack-extensions
            ENV=${DEV} npm run prepare-statics
            ENV=${DEV} npm run pack-statics
            ENV=${DEV} npm run prepare-wizards
            ENV=${DEV} npm run pack-wizards
        # - name: Upload Artifact
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: extensions
        #   path: 
        #     - environments/dev/dist/extensions.yaml
        #     - environments/dev/dist/statics.yaml
        #     - environments/dev/dist/wizards.yaml
  # build-extensions:
  #   uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main # Usage: kyma-project/test-infra/.github/workflows/image-builder.yml@main
  #   with:
  #     name: kyma-dashboard-dev-extensions
  #     dockerfile: Dockerfile.extensions
  #     context: .
  #     export-tags: true
  #     build-args: |
  #       ENV=dev
  test-image:
    runs-on: ubuntu-latest
    needs: build-extensions
    steps:
      - name: Test image
        run: echo "Testing images ${{ needs.build-extensions.outputs.images }}"
  build-web:
    needs: [ build-extensions, load-env ]
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main # Usage: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: kyma-dashboard-dev-web
      dockerfile: Dockerfile.web
      context: .
      export-tags: true
      build-args: |
        ENV=dev
        WEB_IMAGE=${{ needs.load-env.outputs.WEB_IMAGE }}
        EXTENSIONS_IMAGE=${{ needs.build-extensions.outputs.images[0] }}
  build-backend:
    needs: [ build-extensions, load-env ]
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main # Usage: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: kyma-dashboard-dev-backend
      dockerfile: Dockerfile.backend
      context: .
      export-tags: true
      build-args: |
        ENV=dev
        BACKEND_IMAGE=${{ needs.load-env.outputs.BACKEND_IMAGE }}
  build-local:
    needs: [ build-extensions, load-env ]
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main # Usage: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: kyma-dashboard-dev-local
      dockerfile: Dockerfile.local.image-builder
      context: .
      export-tags: true
      build-args: |
        ENV=dev
        LOCAL_IMAGE=${{ needs.load-env.outputs.LOCAL_IMAGE }}
